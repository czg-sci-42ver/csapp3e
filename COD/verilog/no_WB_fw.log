VCD info: dumpfile vcd/log_3_mfEXMEM.vcd opened for output.
sd rs2:11110
offset increase to 000000000100
ld instr offset: 000000000100,init_instr_offset_union:00000000010000001011000010000011000000000100 should include instr :00000000010000001011000010000011
0th IMemory :10000001011000010000011,offset:000000000100
in sd func, rs2:11110, last element:1,rs1:1,sd:1111000001011001000100011
sd instr offset: 000000000100
sd instr rs2:11110
1th IMemory :1111000001011001000100011,offset:000000000100
2th IMemory :10011,offset:000000000100
offset increase to 000000001000
ld instr offset: 000000001000,init_instr_offset_union:00000000100000001011000010000011000000001000 should include instr :00000000100000001011000010000011
sd instr rs2:1000
3th IMemory :100000001011000010000011,offset:000000001000
in sd func, rs2:11110, last element:1,rs1:1,sd:1111000001011010000100011
sd instr offset: 000000001000
4th IMemory :1111000001011010000100011,offset:000000001000
sd instr rs2:0
5th IMemory :10011,offset:000000001000
offset increase to 000000001100
ld instr offset: 000000001100,init_instr_offset_union:00000000110000001011000010000011000000001100 should include instr :00000000110000001011000010000011
6th IMemory :110000001011000010000011,offset:000000001100
in sd func, rs2:11110, last element:1,rs1:1,sd:1111000001011011000100011
sd instr offset: 000000001100
sd instr rs2:11110
7th IMemory :1111000001011011000100011,offset:000000001100
8th IMemory :10011,offset:000000001100
offset increase to 000000010000
ld instr offset: 000000010000,init_instr_offset_union:00000001000000001011000010000011000000010000 should include instr :00000001000000001011000010000011
sd instr rs2:10000
9th IMemory :1000000001011000010000011,offset:000000010000
in sd func, rs2:11110, last element:1,rs1:1,sd:1111000001011100000100011
sd instr offset: 000000010000
10th IMemory :1111000001011100000100011,offset:000000010000
sd instr rs2:0
11th IMemory :10011,offset:000000010000
offset increase to 000000010100
ld instr offset: 000000010100,init_instr_offset_union:00000001010000001011000010000011000000010100 should include instr :00000001010000001011000010000011
12th IMemory :1010000001011000010000011,offset:000000010100
in sd func, rs2:11110, last element:1,rs1:1,sd:1111000001011101000100011
sd instr offset: 000000010100
sd instr rs2:11110
13th IMemory :1111000001011101000100011,offset:000000010100
14th IMemory :10011,offset:000000010100
offset increase to 000000011000
ld instr offset: 000000011000,init_instr_offset_union:00000001100000001011000010000011000000011000 should include instr :00000001100000001011000010000011
sd instr rs2:11000
15th IMemory :1100000001011000010000011,offset:000000011000
Regs[1] 1000 Regs[30] 11110000
EXMEMop change:10011 ==SD:0, == NOP(opcode):1
run new cycle 1,load 0th instruction with opcode 11
IFIDIR opcode: 10011
EXMEMIR opcode: 10011
run new cycle 3,load 1th instruction with opcode 100011
IFIDIR opcode: 11
EXMEMIR opcode: 10011
run new cycle 5,load 2th instruction with opcode 10011
IFIDIR opcode: 100011
IDEXop LD, Ain:1000 offset:100
EXMEMIR opcode: 10011
EXMEMop change:11 ==SD:0, == NOP(opcode):0
run new cycle 7,load 3th instruction with opcode 11
IFIDIR opcode: 10011
EXMEMIR opcode: 11
EXMEMALUOut:1100 load from 3th mem value 1100, imm:100
last loaded value 1000, equal to last stored: 0
EXMEMop change:100011 ==SD:1, == NOP(opcode):0
stall once, stall_cnt 00000000000000000000000000000000
EXMEMIR opcode: 100011
EXMEMALUOut:10000, stall_cnt: 1
IFIDrs2:8
finish store, cnt: 4,cycle: 9,EXMEMB 11110000 store to 4th mem,EXMEMALUOut: 10000
last stored mem 3th mem: 1100, equal to source 30th reg:0 
Regs[1] 1100 Regs[30] 11110000
EXMEMop change:10011 ==SD:0, == NOP(opcode):1
stall once, stall_cnt 00000000000000000000000000000001
EXMEMIR opcode: 10011
run new cycle 13,load 4th instruction with opcode 100011
IFIDIR opcode: 11
EXMEMIR opcode: 10011
run new cycle 15,load 5th instruction with opcode 10011
IFIDIR opcode: 100011
IDEXop LD, Ain:1100 offset:1000
EXMEMIR opcode: 10011
EXMEMop change:11 ==SD:0, == NOP(opcode):0
run new cycle 17,load 6th instruction with opcode 11
IFIDIR opcode: 10011
EXMEMIR opcode: 11
EXMEMALUOut:10100 load from 5th mem value 10100, imm:1000
last loaded value 11110000, equal to last stored: 1
EXMEMop change:100011 ==SD:1, == NOP(opcode):0
stall once, stall_cnt 00000000000000000000000000000000
EXMEMIR opcode: 100011
EXMEMALUOut:11100, stall_cnt: 1
IFIDrs2:12
finish store, cnt: 9,cycle: 19,EXMEMB 11110000 store to 7th mem,EXMEMALUOut: 11100
last stored mem 6th mem: 11000, equal to source 30th reg:0 
Regs[1] 10100 Regs[30] 11110000
EXMEMop change:10011 ==SD:0, == NOP(opcode):1
stall once, stall_cnt 00000000000000000000000000000001
EXMEMIR opcode: 10011
run new cycle 23,load 7th instruction with opcode 100011
IFIDIR opcode: 11
EXMEMIR opcode: 10011
run new cycle 25,load 8th instruction with opcode 10011
IFIDIR opcode: 100011
IDEXop LD, Ain:10100 offset:1100
EXMEMIR opcode: 10011
EXMEMop change:11 ==SD:0, == NOP(opcode):0
run new cycle 27,load 9th instruction with opcode 11
IFIDIR opcode: 10011
EXMEMIR opcode: 11
EXMEMALUOut:100000 load from 8th mem value 100000, imm:1100
last loaded value 11110000, equal to last stored: 1
EXMEMop change:100011 ==SD:1, == NOP(opcode):0
stall once, stall_cnt 00000000000000000000000000000000
EXMEMIR opcode: 100011
EXMEMALUOut:101100, stall_cnt: 1
IFIDrs2:16
finish store, cnt: 14,cycle: 29,EXMEMB 11110000 store to 11th mem,EXMEMALUOut: 101100
last stored mem 10th mem: 101000, equal to source 30th reg:0 
Regs[1] 100000 Regs[30] 11110000
EXMEMop change:10011 ==SD:0, == NOP(opcode):1
stall once, stall_cnt 00000000000000000000000000000001
EXMEMIR opcode: 10011
E4.13.3_mfEXMEM_log.v:295: $finish called at 32 (1s)
